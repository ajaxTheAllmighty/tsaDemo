'use strict';
module.exports = {
    "App": {
        okBtn: "Ok",
        closeBtn: "Close",
        cancelBtn: "Cancel",
        saveBtn: "Save",
        jan: 'January',
        feb: 'February',
        mar: 'March',
        apr: 'April',
        may: 'May',
        jun: 'June',
        jul: 'July',
        aug: 'August',
        sen: 'September',
        oct: 'October',
        nov: 'November',
        dec: 'December'
    },
    "SettingsModule": {
        passwordErrorNotEqual: "Passwords not match.",
        passwordErrorNotTest: "The password must contain numbers, lowercase and capital letters of the Latin alphabet.",
        modalSavedHeader: "Save settings",
        modalSavedMessage: "Settings successfully saved",
        langChooseHeader: "Language selection",
        passwordChangeHeader: "Change password",
        passwordLabel: "Password",
        passwordConfirmLabel: "Confirmation"
    },
    "AutocompleteComponent": {
        inputPlaceholder: "Select value"
    },
    "ImageUploadComponent": {
        downloadImgBtn: "Download",
        uploadImgBtn: "Upload photo",
        chooseFileBtn: "Choose a file"
    },
    "CalendarModule": {
        dateEditHeader: "Edit dates ",
        sumToLabel: "Sum with ",
        workDayLabel: "work days",
        weekendDayLabel: "holidays",
        weekendDayColumnLabel: "Holiday",
        sumWithColumnLabel: "Sum date with",
        errorModalHeader: "Data editing error",
        errorModalMessage1: "Editing is alowed only from current month!",
        errorModalMessage2: "Contact the administrator.",
        sumToSameDateError: '"Sum with" field requires value different from current date.'
    },
    "CardModule": {
        loadingModalHeader: "Loading data",
        loadingModalBody: "Please wait...",
        mainCardCreateHeader: "Add a new record",
        mainCardUpdateHeader: "Edit record: ",
        downloadReportCustomBtn: "Download",
        uploadReportCustomBtn: "Upload",
        locatorLink: "Edit location",
        selectInputHintLabel: "Select value",
        selectInputNullLabel: "No value",
        multiPickerDefaultFilterValue: "Code",
        emptyFieldsError: "Required fields are not filled: ",
        pickerDefaultLink: "change"
    },
    "ExportCsvModule": {
        modalExportHeaderDefault: "Data export",
        modalReportHeaderDefault: "Report processing",
        exportCsvBtn: 'Exporting ({rowsCount} lines)',
        ganerateReportBtn: 'Generate report',
        modalHeaderLoading: 'Generating file',
        reportReadyHeader: 'Report ready',
        exportReadyHeader: 'Data export done',
        downloadBtn: 'Download'
    },
    "FileProcess": {
        step2LoadedStatus: "Uploaded",
        step2ErrorLoadStatus: "Upload error",
        step2LoadingStatus: "Uploading",
        step2UploadingResults: "Files uploading results",
        step2TotalUploaded: "Files uploaded to server: ",
        step2UploadBtn: "Upload",
        step3ProcessInterruptedMsg: "File processing was interrupted!",
        step3ModalToContinueMsg: 'File processing could be continued by pressing "Start processing" button.',
        step3ModalHeader: "Files processing results",
        step3ProcessedFiles: "Files processed successfully: ",
        step3UnprocessedFiles: "File(s) not processed ",
        step3StartProcess: "Start processing",
        step3StopProcess: "Stop processing"
    },
    "FilterModule": {
        activeRows: "Active records",
        inactiveRows: "Inactive records",
        allRows: "All records",
        conditionEqual: "Equal",
        conditionNotEqual: "Not equal",
        conditionMore: "More than",
        conditionLess: "Less than",
        conditionLikeStart: "Starts with",
        conditionLike: "Includes",
        conditionNull: "Empty",
        conditionNotNull: "Not empty",
        conditionMoreOrEqual: "More or equal",
        conditionLessOrEqual: "Less or equal",
        conditionBetween: "Range",
        conditionList: "List",
        textFilterPlaceholder: "Enter value",
        dateFilterPlaceholder: "Enter date",
        filterLoadingMsg: "Loading filter data",
        dateByLabel: "by",
        groupConditionAnd: "And",
        groupConditionOr: "Or",
        groupWithPrev: "Group with previous",
        loadingModalHeader: "Loading data",
        loadingModalBody: "Please wait...",
        loadedChooseFilterLabel: "Select filter",
        loadedModalHeader: "Add filter",
        addFilterBtn: "Add filter",
        defaultFilterHint: "Choose filter"
    },
    "GridModule": {
        activeFilterActiveRows: "Active records",
        activeFilterInactiveRows: "Inactive records",
        activeFilterallRows: "All records",
        activeFilterShowMsg: "show ",
        conditionEqual: "Equal",
        conditionNotEqual: "Not equal",
        conditionMore: "More than",
        conditionLess: "Less than",
        conditionLikeStart: "Starts with",
        conditionLike: "Includes",
        conditionNull: "Empty",
        conditionNotNull: "Not empty",
        conditionMoreOrEqual: "More or equal",
        conditionLessOrEqual: "Less or equal",
        conditionBetween: "Range",
        conditionList: "List",
        dateRangeStart: "from",
        dateRangeEnd: "to",
        loadingModalHeader: "Loading data",
        loadingModalBodyMsg: "Please wait...",
        loadingModalBodyWarningMsg: "Operation could take a long time.",
        addFilterBtn: "Add filter",
        exportCsvBtn: "Export into CSV",
        addColumnHint: "Add column",
        actionsBtn: "Actions ",
        groupEdit: "Group editing",
        addRowBtn: "Add record",
        singleRowMode: "Single line mode",
        multiRowMode: "Multi line mode",
        totalRowsLabel: "total",
        GridPickerHeader: "Selecting a value for the field "
    },
    "MenuModule": {
        helpLink: "Help",
        exitLink: "Exit",
        aboutLink: "About",
        settingsLink: "Settings",
        changePasswordLink: "Change password",
        changeLanguageLink: "Change language",
        copyrightHeader: "About"
    },
    "ReportFilterModule": {
        activeRows: "Active records",
        inactiveRows: "Inactive records",
        allRows: "All records",
        conditionEqual: "Equal",
        conditionNotEqual: "Not equal",
        conditionMore: "More than",
        conditionLess: "Less than",
        conditionLikeStart: "Starts with",
        conditionLike: "Includes",
        conditionNull: "Empty",
        conditionNotNull: "Not empty",
        conditionMoreOrEqual: "More or equal",
        conditionLessOrEqual: "Less or equal",
        conditionBetween: "Range",
        textFilterPlaceholder: "Enter value",
        dateFilterPlaceholder: "Enter date",
        filterLoadingMsg: "Loading filter data",
        dateByLabel: "by",
        groupConditionAnd: "And",
        groupConditionOr: "Or",
        groupWithPrev: "Group with previous",
        loadingModalHeader: "Loading data",
        loadingModalBody: "Please wait...",
        loadedChooseFilterLabel: "Select filter",
        loadedModalHeader: "Add filter",
        addFilterBtn: "Add filter",
        modalReportHeader: "Forming the report",
        modalReportBodyMsg: "Please wait...",
        reportWord: "Report",
        reportReadyMsg: "is formed.",
        forSaveReportMsg: "Press OK to save",
        loadedReportHeader: "Forming the report",
        getReportBtn: "Form report"
    },
    "ShipmentProcessModule": {
        fileInputLabel: "Click here to select file to be uploaded",
        loadingHeader: "Uploading file",
        loadedFileSuccessUploadedMsg: "File uploaded successfully",
        loadedFileErrorUploadedMsg: "Error occurred while uploading file"
    },
    "SystemMessageModule": {
        callWithAdminMsg: "Contact administrator.",
        sendError: "Send to administrator"
    },
    "FileProcessPage": {
        fileUploadMenuLink: "Uploading files",
        fileProcessMenuLink: "Processing files",
        fileInputLabel: "Click here to select file to be uploaded",
        fileTableFileColumn: "File",
        fileTableSizeColumn: "Size",
        fileTableStatusColumn: "Status",
        processTableFileColumn: "File",
        processTableRegionColumn: "Region",
        processTableCountColumn: "Amount",
        processTableFirstDayColumn: "Frist day",
        processTableLastDayColumn: "Last day",
        processTableProgressColumn: "Progress",
        processTableStatusColumn: "Status",
        confirmModalHeader: "Warning!",
        confirmModalBodyMsg: "There are incorrect files which will not be uploaded. Continue uploading?",
        confirmModalConfirmBtn: "Continue"
    },
    "LoginPage": {
        authError: "Authorization error!",
        incorrectPassword: " Incorrect login or password.",
        loginPlaceholder: "Login",
        passwordPlaceholder: "Password",
        authBtn: "Login"},
    "Helper": {
        header: "Error",
        sqlError: "Incorrect SQL query!",
        requiredParamsError: "Necessary query parameters are missing or empty!",
        sessionExpiredError: "Current session has ended!",
        moduleError: 'Error in module"{module}", in function "{function}"'
    },
    "RoutesUploadModule": {
        fileInputLabel: "Click here to select file to be uploaded"
    },
    "RouteCalendarModule": {
        Monday: "Monday",
        Tuesday: "Tuesday",
        Wednesday: "Wednesday",
        Thursday: "Thursday",
        Friday: "Friday",
        Saturday: "Saturday",
        Sunday: "Sunday"
    },
    "ActivityOnMapModule": {
        dateInputLabel: "Select a date to display activities results",
        showResultBtn: "Show results on a map"
    },
    "SurveyManageModule": {
        surveyPickerLink: "Choose survey",
        questionAnswerManageLink: "Questions/Answers manage",
        surveyConstructorLink: "Survey constructor"
    },
    "SM_SurveyPickerModule": {
        gridCustomColumn: "Select"
    },
    "SM_QuestionAnswerManageModule": {
        showAnswersBtn: 'show answers',
        answerGridHint: 'To view/edit the answers click the "show answers" button',
        answerGridFilterLabel: 'Answers to question "{question}"'
    },
    "SM_SurveyConstructorModule": {
        QuestionsHeader: 'Questions',
        QuestionsCountLabel: ' (Count: {count})',
        questionSourceBtn: 'Questions source',
        checkSurveyBtn: 'Check survey',
        removeQuestionBtn: 'Remove ({count})',
        saveBtn: 'Save',
        questionsTableColumnName: 'Question',
        questionsTableColumnCode: 'Code',
        AnswersHeader: 'Answers',
        AnswersCountLabel: ' (Count: {count})',
        answersTableColumnOptions: 'Answers options',
        answersTableColumnNextQuestion: 'Next question',
        answersTableColumnRequiredAnswer: 'Requires an answer',
        questionSourceModalHeader: 'Question source',
        questionSourceModalAddBtn: 'Add',
        questionSourceModalCancelBtn: 'Cancel',
        checkSurveyModalHeader: 'Survey check',
        cycleError: 'Cycle from the question #{start} to #{end} is possible',
        emptyAnswerError: 'There is no "next question" in answer #{answer} question #{question}'
    },
    "ImeiMigrationModule": {
        searchByInventoryNumberBtn: "Search by inventory number",
        chooseFromTreeBtn: "Choose from tree",
        migrateBtn: "Move",
        fullScreenBtn: "Fullscreen",
        normalScreenBtn: "Collapse",
        editUserBtn: "Edit user",
        createUserBtn: "Create user",
        migrateModalHeader: "Moving devices",
        migrateModalConfirmMessage: 'Move selected devices to the user "{user}"',
        migrateModalConfirmBtn: 'Move',
        migrateModalCancelBtn: 'Cancel',
        migrateModalSuccessMessage: 'The devices have been successfully moved!',
        migrateModalErrorHeader: 'Error',
        migrateModalErrorNoDevice: 'No devices selected!',
        migrateModalErrorNoUser: 'No user selected for moving devices!'
    },
    "IM_DestinationUserTreeModule": {
        'searchPlaceholder': "Search",
        'noInventoryNumberLabel': " (no inventory number)",
        'deviceCountLabel': " (device count: {imeiCount})"
    },
    "IM_ImeiSearchModule": {
        'addBtn': "Add",
        'tableColumnCode': "Code",
        'tableColumnDevice': "Device",
        'tableColumnInventory': "Inventory number",
        'tableColumnSerial': "Serial number"
    },
    "RoutesManageModule": {
        stepChooseUser: 'Select field agent',
        stepEditUser: 'Edit routes',
        stepSalepoints: 'Points of sell in the route',
        stepCalendar: 'Route calendar',
        showSalepointsInRouteBtn: "Point's of sell count",
        gridStaticFilterLabel: 'Code FA',
        salepointCountModalHeader: 'Point of sale count',
        salepointCountTableColumnRoute: "Route",
        salepointCountTableColumnCount: "Count of PS"
    },
    "RM_manageSalepointModule": {
        instructionRow1: 'To get started, select a route from the drop-down list on the right side of the screen.',
        instructionRow2: 'After selecting the route, in the "source" table appearing on the left of the screen, select the points of sell that should be added to the route noting them by selecting the checkbox.',
        instructionRow3: 'After selecting points in the "source" table, drag them to the "receiver" table on the right side of the screen.',
        instructionRow4: 'To save points in the route, click the "Save" button above the "receiver" table.',
        instructionRow5: 'To delete points from a route, select the necessary entries in the receiver table on the right side of the screen and click the "Delete points" button that appears.',
        chooseRoutePlaceholder: 'Select route',
        salepointTableColumnCode: 'Point code',
        salepointTableColumnName: 'Name',
        salepointTableColumnAddress: 'Address',
        salepointTableColumnDirection: 'Direction',
        removeSalepointsBtn: 'Remove points ({count})',
        saveRouteBtnDisabled: 'Save route',
        saverouteBtn: 'Save route ({count})',
        salepointSourceGridStaticFilterLabel: 'Exclude PS of route {route}',
        routeSavingErrorHeader: 'Route saving error',
        routeSavingErrorNoSalepoint1: 'The route can not be saved.',
        routeSavingErrorNoSalepoint2: 'There must be at least one point in the route.',
        savingRouteModalHeader: 'Route saving',
        savingRouteModalMessage: 'The route was successfully saved.'
    },
    "RM_routeCalendarModule": {
        noRouteLabel: "no route",
        routeInfoModalHeader: 'Points of sell in route: "{route}" (count: {count})',
        routeInfoModalTableColumnCode: 'Code',
        routeInfoModalTableColumnName: 'Name',
        routeInfoModalTableColumnNodes: 'Nodes',
        saveErrorNeedSaveTamplate: 'The template has been changed, you need to save it.',
        saveErrorNoRoutes: 'There are no routes in the template.',
        saveErrorNoDates: 'It is necessary to set the date range.',
        shapeCalendarError: "Error generating calendar",
        saveCalendarModalHeader: 'Saving calendar',
        saveCalendarModalSaveBtn: 'Save',
        saveCalendarModalConfirmRow1: 'Attention!',
        saveCalendarModalConfirmRow2: 'You are about to change the calendar of routes for field agent "{user}".',
        saveCalendarModalConfirmRow3: 'All existing entries will be changed to the calendar contained in the table.',
        saveCalendarModalConfirmRow4: 'Are you sure you want to continue?',
        calendarModalSavedHeader: 'Saving calendar',
        calendarModalSavedMessage: 'Calendar successfully saved.',
        saveTemplateModalHeader: 'Saving template',
        saveTemplateModalConfirmBtn: 'Continue',
        saveTemplateModalConfirmRow1: 'Attention!',
        saveTemplateModalConfirmRow2: 'You are about to change the route template for field agent "{user}".',
        saveTemplateModalConfirmRow3: 'All existing entries will be changed to those in the recipient table.',
        saveTemplateModalConfirmRow4: 'Are you sure you want to continue?',
        templateModalSavedHeader: 'Saving template',
        templateModalSavedMessage: 'Template successfully saved.',
        templateLabel: 'Template (days: {count})',
        addRouteBtn: 'Add route',
        saveTemplateBtn: 'Save template',
        templateTableColumnDay: 'Day',
        templateTableColumnRoute: 'Route',
        dataRangeLabel: 'Date range',
        startDate: 'start date',
        endDate: 'end date',
        shapeCalendarBtn: 'Generate calendar',
        saveCalendarBtn: 'Save calender',
        calendarTableColumnDate: 'Date',
        calendarTableColumnDay: 'Day of week',
        calendarTableColumnRoute: 'Route',
        salepointListInRouteBtn: 'Points of sell list'
    },
    "ReportPage": {
        openReportBtn: 'Open'
    },
    "UserTreeModule": {
        searchPlaceholder: 'Search',
        saveChangesBtn: 'Save changes',
        cardHeader: 'User "{user}" data',
        infoModalHeader: 'Saving users data',
        infoModalSuccessMessage: 'Changes successfully saved.',
        infoModalErrorMessage: 'Errors occurred while saving.',
        infoModalErrorDetail: 'User "{user}" data was not saved.',
        userModalHeader: 'Saving user data',
        userModalSuccessMessage: 'The data was successfully saved.'
    }
}